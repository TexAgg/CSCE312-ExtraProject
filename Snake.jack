// Chapter 12

class Snake {
	
	// Number of blocks in the snake.
	field int length;
	/* An array of Points.
	Container of all the blocks in the snake. */
	field Array body;
	// How much food has been eaten.
	field int foodEaten;
	// Speeds.
	field int dx;
	field int dy;
	// This is the length of each block.
	field int l;

	constructor Snake new() {
		// http://stackoverflow.com/a/36886969/5415895
		//var Point p;
		
		let l = 5;
		// The snake can't be longer than 30 pixels.
		let body = Array.new(30);
		let body[4] = Point.new(0, 0);
		let body[3] = Point.new(0, l);
		let body[2] = Point.new(0, 2*l);
		let body[1] = Point.new(0, 3*l);
		let body[0] = Point.new(0, 4*l);
		// Initial length is 5.
		let length = 5;
		let dx = 1;
		let dy = 0;

		//let p = body[0];
		do draw();

		return this;
	}

	// Like c++ delete I guess.
	method void dispose() {
		do body.dispose();
		do Memory.deAlloc(this);
		return;
	}

	/*
	Draws the snake.
	I guess just call this every few milliseconds or something.
	*/
	method void draw() {
		var int i;
		var Point p;
		
		do Screen.clearScreen();
		do Screen.setColor(true);

		// Loop through body and color in the pixels.
		let i = 0;
		while (i < length) {
			let p = body[i];
			do Screen.drawRectangle(p.getX(), p.getY(), p.getX() + l, p.getY() + l);

			let i = i + 1;
		}

		return;
	}

	/* 
	Move the snake by taking the last block and moving it to the front.
	ddx or ddy should either be 1, -1, or 0, and exactly one of them must be 0.
	To have the snake do the pacman thing when hitting a wall, take the points mod the dimenions.
	*/
	method void move(int ddx, int ddy) {
		var Point last, p;
		var Array newArray;
		var int i;

		let p = body[0];
		//let last = body[length - 1];
		let newArray = Array.new(30);
		let newArray[0] = Point.new(p.getX() + ddx, p.getY() + ddy);
		
		let i = length;
		while (i > 0) {
			let newArray[i] = body[i-1];
			
			let i = i - 1;
		}
		let body = newArray;
		/*
		let i = 0;
		while (i < length) {
			let body[i] = newArray[i];
			let i = i + 1;
		}
		*/
		//do newArray.dispose();
		do draw();

		return;
	}

	// Add a block to the end.
	method void grow() {
		var Point p, last;
		
		let last = body[length - 1];
		let p = Point.new(last.getX()+l, last.getY()+l);
		let body[length] = p;
		let length = length + 1;

		do draw();

		return;
	}

	method int getLength() {
		return length;
	}
}